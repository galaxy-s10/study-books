===================================jQuery 效果- 隐藏和显示=====================
hide()隐藏									语法：$(selector).hide(speed,callback);
show()显示									语法：$(selector).show(speed,callback); 
toggle()切换 hide() 和 show() 方法。		语法：$(selector).toggle(speed,callback); 

===============================jQuery 效果 - 淡入淡出=========================
fadeIn()	用于淡入已隐藏的元素。			语法：$(selector).fadeIn(speed,callback);
fadeOut()	方法用于淡出可见元素。			语法：$(selector).fadeOut(speed,callback);
fadeToggle()在 fadeIn() 与 fadeOut() 方法之间进行切换。	语法：$(selector).fadeToggle(speed,callback);
fadeTo() 方法允许渐变为给定的不透明度（值介于 0 与 1 之间）。语法：$(selector).fadeTo(speed,opacity,callback);

===============================jQuery 效果 - 滑动===============================
slideDown() 方法用于向下滑动元素。		语法：$(selector).slideDown(speed,callback);
slideUp() 方法用于向上滑动元素。		语法：$(selector).slideUp(speed,callback);
slideToggle() 方法可以在 slideDown() 与 slideUp() 方法之间进行切换。	语法：$(selector).slideToggle(speed,callback);

=======================jQuery 效果- 动画==========================
animate() 方法允许您创建自定义的动画。		语法：$(selector).animate({params},speed,callback);
  $("div").animate({
    left:'250px',
    height:'+=150px',
    width:'+=150px'
  });
  ！！！！！！！！！！！！！！！！！！！！！！！！！！！！！
  可以用 animate() 方法来操作所有 CSS 属性吗？

是的，几乎可以！不过，需要记住一件重要的事情：当使用 animate() 时，必须使用 Camel 标记法书写所有的属性名，比如，必须使用 paddingLeft 而不是 padding-left，使用 marginRight 而不是 margin-right，等等。

同时，色彩动画并不包含在核心 jQuery 库中。
！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！

=============================jQuery 停止动画============================
stop() 方法用于在动画或效果完成前对它们进行停止。
stop();		停止当前激活的动画，但之后我们能再动画队列中再次激活。
stop(true);	停止当前动画，并清除动画队列，所以元素的所有动画都会停止。
stop(true,true);	快速完成动作，并停止它。
========================jQuery - 链(Chaining)==================
实例：$("#p1").css("color","red").slideUp(2000).slideDown(2000);
这个例子把 css()、slideUp() 和 slideDown() 链接在一起。"p1" 元素首先会变为红色，然后向上滑动，再然后向下滑动：

========================================jQuery - 获取/设置内容和属性========================

    text() - 设置或返回所选元素的文本内容						返回：$("#test").text()				设置：$("#test3").text("RUNOOB")
    html() - 设置或返回所选元素的内容（包括 HTML 标记）			返回：$("#test").html()				设置：$("#test2").html("<b>Hello world!</b>")
    val() - 设置或返回表单字段的值								返回：$("#test").val()				设置：$("#test3").val("RUNOOB")
	attr() 方法用于获取属性值。									返回：$("#runoob").attr("href")		设置：$("#runoob").attr("href","http://www.runoob.com/jquery")

=============================jQuery - 添加元素==============================

    append() - 在被选元素的结尾插入内容				$("p").append("在结尾追加文本")
    prepend() - 在被选元素的开头插入内容			$("p").prepend("在开头追加文本")
    after() - 在被选元素之后插入内容				$("img").after("在后面添加文本")
    before() - 在被选元素之前插入内容				$("img").before("在前面添加文本")
	after() - 在被选元素之后添加若干新元素			$("img").after("<b>I </b>",$("<i></i>").text("love "))
	
==============================jQuery - 删除元素===========================

    remove() - 删除被选元素（及其子元素）							$("#div1").remove()
    empty() - 从被选元素中删除子元素								$("#div1").empty()
	过滤被删除的元素（删除 class="italic" 的所有 <p> 元素）			$("p").remove(".italic")

==========================jQuery - 获取并设置 CSS 类======================================

    addClass() - 向被选元素添加一个或多个类						$("h1,h2,p").addClass("blue")
    removeClass() - 从被选元素删除一个或多个类					$("h1,h2,p").removeClass("blue")
    toggleClass() - 对被选元素进行添加/删除类的切换操作			$("h1,h2,p").toggleClass("blue")
    css() - 设置或返回样式属性				返回：$("p").css("background-color")		设置：$("p").css("background-color","yellow")

===========================jQuery 尺寸=============================
	width() 方法设置或返回元素的宽度（不包括内边距、边框或外边距）。
	height() 方法设置或返回元素的高度（不包括内边距、边框或外边距）。
	innerWidth() 方法返回元素的宽度（包括内边距）。
	innerHeight() 方法返回元素的高度（包括内边距）。
	outerWidth() 方法返回元素的宽度（包括内边距和边框）。
	outerHeight() 方法返回元素的高度（包括内边距和边框）。
	
=====================jQuery 遍历 - 祖先================================
	parent() 方法返回被选元素的直接父元素。												$("span").parent();
	parents() 方法返回被选元素的所有祖先元素，它一路向上直到文档的根元素 (<html>)。		$("span").parents();
	$("span").parents("ul")		返回所有 <span> 元素的所有祖先，并且它是 <ul> 元素
	parentsUntil() 方法返回介于两个给定元素之间的所有祖先元素。							$("span").parentsUntil("div");
	
========================jQuery 遍历 - 后代================================
	children() 方法返回被选元素的所有直接子元素。										$("div").children();
	$("div").children("p.1");	返回类名为 "1" 的所有 <p> 元素，并且它们是 <div> 的直接子元素
	find() 方法返回被选元素的后代元素，一路向下直到最后一个后代。						$("div").find("span");

==========================jQuery 遍历 - 同胞(siblings)========================
	siblings() 方法返回被选元素的所有同胞元素。						$("h2").siblings()
	返回属于 <h2> 的同胞元素的所有 <p> 元素：						$("h2").siblings("p")
	next() 方法返回被选元素的下一个同胞元素。						$("h2").next()
	nextAll() 方法返回被选元素的所有跟随的同胞元素。				$("h2").nextAll()
	nextUntil() 方法返回介于两个给定参数之间的所有跟随的同胞元素。	$("h2").nextUntil("h6")
	
============================jQuery 遍历- 过滤====================
	first() 方法返回被选元素的首个元素。				$("div p").first();
	last() 方法返回被选元素的最后一个元素。				$("div p").last();
	eq() 方法返回被选元素中带有指定索引号的元素。		$("p").eq(1);
	filter() 方法允许您规定一个标准。不匹配这个标准的元素会被从集合中删除，匹配的元素会被返回。		$("p").filter(".url");
	not() 方法返回不匹配标准的所有元素。					$("p").not(".url");
	

