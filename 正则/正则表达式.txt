
=================转义==========
匹配特殊字符可以使用/进行转义，如：
\[		匹配	[
\*		匹配	*
\.		匹配	.
\?		匹配	？

==================特殊字符===========
()		标记一个子表达式的开始和结束标志。
*		匹配前面的子表达式0次或多次。
+		匹配前面的子表达式1次或多次。
？		匹配前面的子表达式0次或1次，或指明一个非贪婪限定符。
.		匹配除换行符\n之外的任何单字符。
[		标记一个中括号表达式的开始。
^		匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。
{		标记限定符表达式的开始。
|		指明两项之间的一个选择。
	

================限定符===================
*		匹配前面的子表达式0次或多次。等价于[0,]
+		匹配前面的子表达式1次或多次。等价于{1,]
？		匹配前面的子表达式0次或1次，或指明一个非贪婪限定符。等价于[0,1]
{n} 	n 是一个非负整数。匹配确定的 n 次。
{n,} 	n 是一个非负整数。至少匹配n 次。
{n,m} 	m 和 n 均为非负整数，其中n <= m。最少匹配 n 次且最多匹配 m 次。
限定符都具有贪婪特性，它们会尽可能多的匹配文字，只有在它们的后面加上一个?就可以实现非贪婪或最小匹配。

================注意：不能将限定符与定位符一起使用。===============

==================定位符=======================
^ 		匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 \n 或 \r 之后的位置匹配。
$ 		匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 \n 或 \r 之前的位置匹配。
\b 		匹配一个单词边界，即字与空格间的位置。
\B 		非单词边界匹配。


======元字符==========
\d				匹配一个数字字符，等价于[0-9]
\D				匹配一个非数字字符，等价于[^0-9]
\w				匹配一个字母，数字，下划线。等价于[A-Za_z0_9_]
\W				匹配非字母，数字，下划线。等价于[^A-Za_z0_9_]
\s				匹配任何空白字符，包括空格，制表符，换页符等等。等价于[\f\n\r\t\v]
\S				匹配任何非空白字符。等价于[^\f\n\r\t\v]
















